[{"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\index.js":"1","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\App.js":"2","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Mainrouter.js":"3","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Body.js":"4","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Mainpage.js":"5","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Faq.js":"6","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Watch.js":"7","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Download.js":"8","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Footer.js":"9","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Header.js":"10","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\logincomponents\\Signin.js":"11","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\HeaderNav.js":"12","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Whoiswatching\\Watching_card.js":"13","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Addmovies.js":"14","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Mainprofile.js":"15","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Nav.js":"16","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Profilebody.js":"17","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Series.js":"18","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Flims.js":"19","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Documatary.js":"20","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\logincomponents\\Register.js":"21","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Practice.js":"22","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Watchlist.js":"23","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\users\\Userprofile.js":"24","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Whoiswatching\\Whoswatching.js":"25"},{"size":240,"mtime":1610467446628,"results":"26","hashOfConfig":"27"},{"size":433,"mtime":1610441478424,"results":"28","hashOfConfig":"27"},{"size":1605,"mtime":1610876921515,"results":"29","hashOfConfig":"27"},{"size":1034,"mtime":1610732079323,"results":"30","hashOfConfig":"27"},{"size":795,"mtime":1610630981778,"results":"31","hashOfConfig":"27"},{"size":4829,"mtime":1610630538297,"results":"32","hashOfConfig":"27"},{"size":990,"mtime":1610732357204,"results":"33","hashOfConfig":"27"},{"size":1012,"mtime":1610731874969,"results":"34","hashOfConfig":"27"},{"size":1659,"mtime":1610432139427,"results":"35","hashOfConfig":"27"},{"size":1835,"mtime":1610783995894,"results":"36","hashOfConfig":"27"},{"size":5135,"mtime":1610881424732,"results":"37","hashOfConfig":"27"},{"size":1021,"mtime":1610512441229,"results":"38","hashOfConfig":"27"},{"size":3829,"mtime":1610882311897,"results":"39","hashOfConfig":"27"},{"size":1665,"mtime":1610558993856,"results":"40","hashOfConfig":"27"},{"size":973,"mtime":1610779990725,"results":"41","hashOfConfig":"27"},{"size":6326,"mtime":1610867276321,"results":"42","hashOfConfig":"27"},{"size":2924,"mtime":1610867826229,"results":"43","hashOfConfig":"27"},{"size":2299,"mtime":1610867618999,"results":"44","hashOfConfig":"27"},{"size":1905,"mtime":1610779583926,"results":"45","hashOfConfig":"27"},{"size":1977,"mtime":1610779639527,"results":"46","hashOfConfig":"27"},{"size":3623,"mtime":1610783844044,"results":"47","hashOfConfig":"27"},{"size":1140,"mtime":1610679633110,"results":"48","hashOfConfig":"27"},{"size":1812,"mtime":1610779949486,"results":"49","hashOfConfig":"27"},{"size":1141,"mtime":1610692078585,"results":"50","hashOfConfig":"27"},{"size":1139,"mtime":1610866816038,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"w2meou",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\index.js",[],["108","109"],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\App.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Mainrouter.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Body.js",["110"],"import './Css/Body.css'\r\n\r\nconst Body = () => {\r\n    return (\r\n        <div className='bdycontainer'>\r\n            <div className='text_container'>\r\n                <div className='texth1'>\r\n                    <h1>Enjoy on your TV.</h1>\r\n                </div>\r\n                <div className='texth3'>\r\n                    <h3>Watch on smart TVs, PlayStation, Xbox, Chromecast, Apple TV, Blu-ray players and more.</h3>\r\n                </div>\r\n            </div>\r\n            <div className='bdyimage'>\r\n                <img className='img1' src='https://assets.nflxext.com/ffe/siteui/acquisition/ourStory/fuji/desktop/tv.png' alt='/'></img>\r\n                <img className='img2' style={{ width: '290px', height: '170px' }} src='https://www.purefandom.com/wp-content/uploads/2018/12/deckerstar-1.gif' alt='/' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Body\r\n{/* <h1>Enjoy on your TV.</h1>\r\n                    <h3>Watch on smart TVs, PlayStation, Xbox, Chromecast, Apple TV, Blu-ray players and more.</h3> */}","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Mainpage.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Faq.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Watch.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Download.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Footer.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Header.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\logincomponents\\Signin.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\HeaderNav.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Whoiswatching\\Watching_card.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Addmovies.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Mainprofile.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Nav.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Profilebody.js",["111"],"import { Component } from \"react\"\r\nimport axios from 'axios'\r\nimport './Css/Profilebody.css'\r\nimport { withRouter } from \"react-router\"\r\nconst url = 'http://localhost:1234/movies'\r\nconst carturl = 'http://localhost:1234/cart'\r\nclass Profilebody extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            movies: '',\r\n            series: '',\r\n            documentaries: '',\r\n        }\r\n    }\r\n    renderseries = (data) => {\r\n        if (data) {\r\n            return (\r\n                data.map(item => (< img id={item.id} src={item.imageurl} onClick={this.selecthandler} alt='netflix images' />)\r\n                )\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n\r\n    selecthandler = (e) => {\r\n        const id = e.target.id\r\n        if (this.state.movies) {\r\n            const cartimage = this.state.movies.filter(item =>\r\n            (\r\n                parseInt(item.id) === parseInt(id)\r\n            ))\r\n            sessionStorage.setItem('movie_name', cartimage[0].name)\r\n            sessionStorage.setItem('movie_image', cartimage[0].imageurl)\r\n            sessionStorage.setItem('movie_id', cartimage[0].id)\r\n            // console.log(cartimage[0])\r\n            window.scrollTo({ top: 0 })\r\n            // axios.post(carturl, cartimage)\r\n            this.props.history.push('/profile')\r\n\r\n        }\r\n    }\r\n    render() {\r\n        if (sessionStorage.getItem('logintoken') === null) {\r\n            this.props.history.push('/signin')\r\n        }\r\n        return (\r\n            <div className='profilebody_container'>\r\n                <h3 style={{ marginLeft: '20px', fontWeight: 'bold' }}>Trending now</h3>\r\n                <div className='series_ccontainer' >\r\n                    {this.renderseries(this.state.movies.slice(40, 55))}\r\n                </div>\r\n                <h3 style={{ marginLeft: '20px', fontWeight: 'bold' }}>Series</h3>\r\n                <div className='series_ccontainer'>\r\n                    {this.renderseries(this.state.series)}\r\n                </div>\r\n                <h3 style={{ marginLeft: '20px', fontWeight: 'bold' }}>Documentaries</h3>\r\n                <div className='series_ccontainer'>\r\n                    {this.renderseries(this.state.documentaries)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        axios.get(url).then(res => {\r\n            this.setState({ movies: res.data })\r\n            if (this.state.movies) {\r\n                const output = this.state.movies.filter(item => item.genere === 'Series')\r\n                // console.log('output', output)\r\n                this.setState({ series: output })\r\n                const document = this.state.movies.filter(item => item.genere === 'Documentaries')\r\n                // console.log('output', output)\r\n                this.setState({ documentaries: document })\r\n            }\r\n        }\r\n        )\r\n\r\n    }\r\n}\r\nexport default withRouter(Profilebody)","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Series.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Flims.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Documatary.js",["112"],"import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './Css/Series.css'\r\nconst url = 'http://localhost:1234/movies'\r\nclass Documantaries extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            series: '',\r\n            filteredseries: ''\r\n        }\r\n    }\r\n    inputhandler = (e) => {\r\n        const key = e.target.value\r\n        if (this.state.series) {\r\n            const filteredseries = this.state.series.filter(item => (\r\n                item.name.toLowerCase().indexOf(key.toLowerCase()) > -1\r\n            ))\r\n            this.setState({\r\n                filteredseries: filteredseries\r\n            })\r\n        }\r\n        console.log('documatary', this.state.filteredmovie)\r\n    }\r\n    rendermovie = (data) => {\r\n        if (data) {\r\n            return (\r\n                data.map(item => (< img src={item.imageurl} alt='netflix images' />)\r\n                )\r\n            )\r\n        }\r\n\r\n    }\r\n    render() {\r\n        if (sessionStorage.getItem('logintoken') === null) {\r\n            this.props.history.push('/signin')\r\n        }\r\n        return (\r\n            <div className='Series_container'>\r\n                <div className='Series_searchbar'>\r\n                    <input placeholder='Search Documantaries here' onChange={this.inputhandler} />\r\n                </div>\r\n                <div className='Seriessearch_results'>\r\n                    {this.rendermovie(this.state.filteredseries)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        axios.get(url).then(res => {\r\n            this.setState({ movies: res.data })\r\n            if (this.state.movies) {\r\n                const output = this.state.movies.filter(item => item.genere === 'Documentaries')\r\n                console.log('output', output)\r\n                this.setState({ series: output })\r\n            }\r\n        })\r\n    }\r\n}\r\nexport default Documantaries","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\logincomponents\\Register.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Practice.js",["113"],"import { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './Practice.css'\r\nclass Practice extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state =\r\n        {\r\n            visible: false\r\n        }\r\n    }\r\n    visiblehandler = () => {\r\n        this.setState({ visible: !this.state.visible })\r\n    }\r\n    // styles=()=>\r\n    // {\r\n    //     visibility: this.state.visible ,\r\n\r\n    // }\r\n    visiblehandl = () => {\r\n        alert('click')\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='practice_container'>\r\n                <div className='text'>\r\n                    <button onClick={this.visiblehandler}>text</button>\r\n                </div>\r\n                {\r\n                    this.state.visible && <div className='list' class=\"w3-container w3-center w3-animate-top\" style={{ visibility: this.state.visible }}>\r\n                        <li onClick={this.visiblehandl}>a</li>\r\n\r\n                        <li>b</li>\r\n                        <li>c</li>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Practice","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Watchlist.js",["114","115"],"import axios from \"axios\";\r\nimport './Css/Watchlist.css'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nconst carturl = 'http://localhost:1234/cart'\r\nconst Watchlist = () => {\r\n    const [watchlist, setwatchlist] = useState('')\r\n    const [update, setupdate] = useState('')\r\n    useEffect(async () => {\r\n        await axios.get(carturl).then(res => setwatchlist(res.data))\r\n    }, [update])\r\n    const deletehandler = (e) => {\r\n        axios.delete(`${carturl}/${e.target.value}`).then(res => setupdate(res.data))\r\n\r\n    }\r\n    const renderwatchlist = (data) => {\r\n        if (data) {\r\n            return (\r\n                data.map((item, idx) => {\r\n                    return (\r\n                        <div className='image'>\r\n                            <img src={item[0].imageurl} style={{\r\n                                width: '100%', height: '350px', border: 'none'\r\n                            }} alt='netflix watchlist' />\r\n                            <button key={idx} value={idx + 1} className='btn btn-success' onClick={deletehandler}>delete</button>\r\n                        </div>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className='watchlist_logo'>\r\n                <Link to='/profile'><img style={{\r\n                    width: '300px', height: '200px'\r\n                }} src='https://download.logo.wine/logo/Netflix/Netflix-Logo.wine.png' alt='/'></img></Link>\r\n            </div>\r\n            <div className='watchlist_container'>\r\n                <div className='watchlist_display'>\r\n                    {renderwatchlist(watchlist)}\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n\r\n}\r\nexport default Watchlist\r\n","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\users\\Userprofile.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Whoiswatching\\Whoswatching.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":22,"column":1,"nodeType":"122","messageId":"123","endLine":23,"endColumn":120},{"ruleId":"124","severity":1,"message":"125","line":6,"column":7,"nodeType":"126","messageId":"127","endLine":6,"endColumn":14},{"ruleId":"124","severity":1,"message":"128","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":14},{"ruleId":"124","severity":1,"message":"128","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":14},{"ruleId":"124","severity":1,"message":"129","line":3,"column":16,"nodeType":"126","messageId":"127","endLine":3,"endColumn":24},{"ruleId":"130","severity":1,"message":"131","line":10,"column":15,"nodeType":"132","endLine":12,"endColumn":6},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'carturl' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]