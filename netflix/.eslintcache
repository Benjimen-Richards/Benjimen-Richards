[{"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\index.js":"1","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\App.js":"2","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Mainrouter.js":"3","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Body.js":"4","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Mainpage.js":"5","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Faq.js":"6","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Watch.js":"7","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Download.js":"8","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Footer.js":"9","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Header.js":"10","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\logincomponents\\Signin.js":"11","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\HeaderNav.js":"12","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Whoiswatching\\Watching_card.js":"13","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Addmovies.js":"14","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Mainprofile.js":"15","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Nav.js":"16","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Profilebody.js":"17","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Series.js":"18","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Flims.js":"19","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Documatary.js":"20","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\logincomponents\\Register.js":"21","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Practice.js":"22","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Watchlist.js":"23","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\users\\Userprofile.js":"24","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\moviepage\\Moviepage.js":"25","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\redux\\store\\Store.js":"26","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\redux\\reducer\\Reducer.js":"27","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\redux\\display.js":"28","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\redux\\actions\\index.js":"29","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\redux\\reducer\\watchingcard.js":"30","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\redux\\reducer\\watchlist_reducer.js":"31"},{"size":370,"mtime":1610947364285,"results":"32","hashOfConfig":"33"},{"size":433,"mtime":1610441478424,"results":"34","hashOfConfig":"33"},{"size":1819,"mtime":1610948994549,"results":"35","hashOfConfig":"33"},{"size":1034,"mtime":1610732079323,"results":"36","hashOfConfig":"33"},{"size":795,"mtime":1610630981778,"results":"37","hashOfConfig":"33"},{"size":4829,"mtime":1610630538297,"results":"38","hashOfConfig":"33"},{"size":990,"mtime":1610732357204,"results":"39","hashOfConfig":"33"},{"size":1012,"mtime":1610731874969,"results":"40","hashOfConfig":"33"},{"size":1659,"mtime":1610432139427,"results":"41","hashOfConfig":"33"},{"size":1835,"mtime":1610783995894,"results":"42","hashOfConfig":"33"},{"size":5208,"mtime":1610946598217,"results":"43","hashOfConfig":"33"},{"size":1021,"mtime":1610512441229,"results":"44","hashOfConfig":"33"},{"size":4076,"mtime":1611028332097,"results":"45","hashOfConfig":"33"},{"size":1665,"mtime":1610558993856,"results":"46","hashOfConfig":"33"},{"size":827,"mtime":1610965860439,"results":"47","hashOfConfig":"33"},{"size":7474,"mtime":1610967259074,"results":"48","hashOfConfig":"33"},{"size":2980,"mtime":1610965722565,"results":"49","hashOfConfig":"33"},{"size":2889,"mtime":1610968745036,"results":"50","hashOfConfig":"33"},{"size":2814,"mtime":1610968749704,"results":"51","hashOfConfig":"33"},{"size":2606,"mtime":1610968987170,"results":"52","hashOfConfig":"33"},{"size":3754,"mtime":1610945742325,"results":"53","hashOfConfig":"33"},{"size":1140,"mtime":1610679633110,"results":"54","hashOfConfig":"33"},{"size":2258,"mtime":1610969103166,"results":"55","hashOfConfig":"33"},{"size":1170,"mtime":1610945526171,"results":"56","hashOfConfig":"33"},{"size":1565,"mtime":1610891379422,"results":"57","hashOfConfig":"33"},{"size":289,"mtime":1610963837509,"results":"58","hashOfConfig":"33"},{"size":232,"mtime":1610963801229,"results":"59","hashOfConfig":"33"},{"size":2525,"mtime":1610966875382,"results":"60","hashOfConfig":"33"},{"size":482,"mtime":1610964776679,"results":"61","hashOfConfig":"33"},{"size":229,"mtime":1610952846603,"results":"62","hashOfConfig":"33"},{"size":256,"mtime":1610964469590,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"w2meou",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\index.js",[],["134","135"],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\App.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Mainrouter.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Body.js",["136"],"import './Css/Body.css'\r\n\r\nconst Body = () => {\r\n    return (\r\n        <div className='bdycontainer'>\r\n            <div className='text_container'>\r\n                <div className='texth1'>\r\n                    <h1>Enjoy on your TV.</h1>\r\n                </div>\r\n                <div className='texth3'>\r\n                    <h3>Watch on smart TVs, PlayStation, Xbox, Chromecast, Apple TV, Blu-ray players and more.</h3>\r\n                </div>\r\n            </div>\r\n            <div className='bdyimage'>\r\n                <img className='img1' src='https://assets.nflxext.com/ffe/siteui/acquisition/ourStory/fuji/desktop/tv.png' alt='/'></img>\r\n                <img className='img2' style={{ width: '290px', height: '170px' }} src='https://www.purefandom.com/wp-content/uploads/2018/12/deckerstar-1.gif' alt='/' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Body\r\n{/* <h1>Enjoy on your TV.</h1>\r\n                    <h3>Watch on smart TVs, PlayStation, Xbox, Chromecast, Apple TV, Blu-ray players and more.</h3> */}","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Mainpage.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Faq.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Watch.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Download.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Footer.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\Header.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\logincomponents\\Signin.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Intropage\\HeaderNav.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Whoiswatching\\Watching_card.js",["137"],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Addmovies.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Mainprofile.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Nav.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Profilebody.js",["138"],"import { Component } from \"react\"\r\nimport axios from 'axios'\r\nimport './Css/Profilebody.css'\r\nimport { withRouter } from \"react-router\"\r\nconst url = 'http://localhost:1234/movies'\r\nconst carturl = 'http://localhost:1234/cart'\r\nclass Profilebody extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            movies: '',\r\n            series: '',\r\n            documentaries: '',\r\n        }\r\n    }\r\n    renderseries = (data) => {\r\n        if (data) {\r\n            return (\r\n                data.map(item => (< img id={item.id} src={item.imageurl} onClick={this.selecthandler} alt='netflix images' />)\r\n                )\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n\r\n    selecthandler = (e) => {\r\n        const id = e.target.id\r\n        if (this.state.movies) {\r\n            const cartimage = this.state.movies.filter(item =>\r\n            (\r\n                parseInt(item.id) === parseInt(id)\r\n            ))\r\n            sessionStorage.setItem('movie_name', cartimage[0].name)\r\n            sessionStorage.setItem('movie_image', cartimage[0].imageurl)\r\n            sessionStorage.setItem('movie_id', cartimage[0].id)\r\n            sessionStorage.setItem('listbutton', true)\r\n            // console.log(cartimage[0])\r\n            window.scrollTo({ top: 0 })\r\n            // axios.post(carturl, cartimage)\r\n            this.props.history.push('/profile')\r\n\r\n        }\r\n    }\r\n    render() {\r\n        if (sessionStorage.getItem('logintoken') === null) {\r\n            this.props.history.push('/signin')\r\n        }\r\n        return (\r\n            <div className='profilebody_container'>\r\n                <h3 style={{ marginLeft: '20px', fontWeight: 'bold' }}>Trending now</h3>\r\n                <div className='series_ccontainer' >\r\n                    {this.renderseries(this.state.movies.slice(40, 55))}\r\n                </div>\r\n                <h3 style={{ marginLeft: '20px', fontWeight: 'bold' }}>Series</h3>\r\n                <div className='series_ccontainer'>\r\n                    {this.renderseries(this.state.series)}\r\n                </div>\r\n                <h3 style={{ marginLeft: '20px', fontWeight: 'bold' }}>Documentaries</h3>\r\n                <div className='series_ccontainer'>\r\n                    {this.renderseries(this.state.documentaries)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        axios.get(url).then(res => {\r\n            this.setState({ movies: res.data })\r\n            if (this.state.movies) {\r\n                const output = this.state.movies.filter(item => item.genere === 'Series')\r\n                // console.log('output', output)\r\n                this.setState({ series: output })\r\n                const document = this.state.movies.filter(item => item.genere === 'Documentaries')\r\n                // console.log('output', output)\r\n                this.setState({ documentaries: document })\r\n            }\r\n        }\r\n        )\r\n\r\n    }\r\n}\r\nexport default withRouter(Profilebody)","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Series.js",["139"],"import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport './Css/Series.css'\r\nconst url = 'http://localhost:1234/movies'\r\nclass Series extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            series: '',\r\n            filteredseries: '',\r\n            hoverimage: ''\r\n        }\r\n    }\r\n    inputhandler = (e) => {\r\n        const key = e.target.value\r\n        if (this.state.series) {\r\n            const filteredseries = this.state.series.filter(item => (\r\n                item.name.toLowerCase().indexOf(key.toLowerCase()) > -1\r\n            ))\r\n            this.setState({\r\n                filteredseries: filteredseries\r\n            })\r\n        }\r\n    }\r\n    selecthandler = (e) => {\r\n        const value = e.target.id\r\n        // console.log(value)\r\n        // axios.get(`${url}/${value}`).then(res => this.setState({ hoverimage: res.data }))\r\n        // console.log(this.state.hoverimage)\r\n    }\r\n    dataselect = (e) => {\r\n        const id = e.target.id\r\n        const cartimage = this.state.movies.filter(item =>\r\n        (\r\n            parseInt(item.id) === parseInt(id)\r\n        ))\r\n        sessionStorage.setItem('movie_name', cartimage[0].name)\r\n        sessionStorage.setItem('movie_image', cartimage[0].imageurl)\r\n        sessionStorage.setItem('movie_id', cartimage[0].id)\r\n        this.props.history.push('/moviepage')\r\n        // console.log(cartimage)\r\n    }\r\n    rendermovie = (data) => {\r\n        if (data) {\r\n            return (\r\n                data.map(item => {\r\n                    return (\r\n                        < img src={item.imageurl} id={item.id} onClick={this.dataselect} alt='netflix images' />\r\n                    )\r\n                }\r\n                ))\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        if (sessionStorage.getItem('logintoken') === null) {\r\n            this.props.history.push('/signin')\r\n        }\r\n        return (\r\n            <div className='Series_container'>\r\n                <div className='Series_searchbar'>\r\n                    <input placeholder='Search series here' onChange={this.inputhandler} />\r\n                </div>\r\n                <div className='Seriessearch_results'>\r\n                    {this.rendermovie(this.state.filteredseries)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        axios.get(url).then(res => {\r\n            this.setState({ movies: res.data })\r\n            if (this.state.movies) {\r\n                const output = this.state.movies.filter(item => item.genere === 'Series')\r\n                console.log('output', output)\r\n                this.setState({ series: output, filteredseries: output })\r\n            }\r\n        })\r\n        window.scrollTo(\r\n            {\r\n                top: 0\r\n            }\r\n        )\r\n    }\r\n}\r\nexport default withRouter(Series)","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Flims.js",["140","141"],"import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { BsSkipBackward } from 'react-icons/bs'\r\nimport { Link } from \"react-router-dom\";\r\nimport './Css/Series.css'\r\nconst url = 'http://localhost:1234/movies'\r\nclass Flims extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            series: '',\r\n            filteredseries: ''\r\n        }\r\n    }\r\n    inputhandler = (e) => {\r\n        const key = e.target.value\r\n        if (this.state.series) {\r\n            const filteredseries = this.state.series.filter(item => (\r\n                item.name.toLowerCase().indexOf(key.toLowerCase()) > -1\r\n            ))\r\n            this.setState({\r\n                filteredseries: filteredseries\r\n            })\r\n        }\r\n        // console.log('filter', this.state.filteredmovie)\r\n    }\r\n    dataselect = (e) => {\r\n        const id = e.target.id\r\n        const cartimage = this.state.movies.filter(item =>\r\n        (\r\n            parseInt(item.id) === parseInt(id)\r\n        ))\r\n        sessionStorage.setItem('movie_name', cartimage[0].name)\r\n        sessionStorage.setItem('movie_image', cartimage[0].imageurl)\r\n        sessionStorage.setItem('movie_id', cartimage[0].id)\r\n        this.props.history.push('/moviepage')\r\n        // console.log(cartimage)\r\n    }\r\n    rendermovie = (data) => {\r\n        if (data) {\r\n            return (\r\n                data.map(item => (< img src={item.imageurl} id={item.id} onClick={this.dataselect} alt='netflix images' />)\r\n                )\r\n            )\r\n        }\r\n\r\n    }\r\n    redirecttoprofile = () => {\r\n        // this.props.history.push('/profile')\r\n        console.log('clicked')\r\n    }\r\n    render() {\r\n        if (sessionStorage.getItem('logintoken') === null) {\r\n            this.props.history.push('/signin')\r\n        }\r\n        return (\r\n            <div>\r\n                <div className='Series_container'>\r\n                    <div className='Series_searchbar'>\r\n                        <input placeholder='Search Flims here' onChange={this.inputhandler} />\r\n                    </div>\r\n                    <div className='Seriessearch_results'>\r\n                        {this.rendermovie(this.state.filteredseries)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        axios.get(url).then(res => {\r\n            this.setState({ movies: res.data })\r\n            if (this.state.movies) {\r\n                const output = this.state.movies.filter(item => item.genere === 'Movies')\r\n                console.log('output', output)\r\n                this.setState({ series: output, filteredseries: output })\r\n            }\r\n        })\r\n        window.scrollTo(\r\n            {\r\n                top: 0\r\n            }\r\n        )\r\n    }\r\n}\r\nexport default Flims","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Documatary.js",["142"],"import axios from \"axios\";\r\nimport { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './Css/Series.css'\r\nconst url = 'http://localhost:1234/movies'\r\nclass Documantaries extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            series: '',\r\n            filteredseries: ''\r\n        }\r\n    }\r\n    inputhandler = (e) => {\r\n        const key = e.target.value\r\n        if (this.state.series) {\r\n            const filteredseries = this.state.series.filter(item => (\r\n                item.name.toLowerCase().indexOf(key.toLowerCase()) > -1\r\n            ))\r\n            this.setState({\r\n                filteredseries: filteredseries\r\n            })\r\n        }\r\n        console.log('documatary', this.state.filteredmovie)\r\n    }\r\n    dataselect = (e) => {\r\n        const id = e.target.id\r\n        const cartimage = this.state.movies.filter(item =>\r\n        (\r\n            parseInt(item.id) === parseInt(id)\r\n        ))\r\n        sessionStorage.setItem('movie_name', cartimage[0].name)\r\n        sessionStorage.setItem('movie_image', cartimage[0].imageurl)\r\n        sessionStorage.setItem('movie_id', cartimage[0].id)\r\n        this.props.history.push('/moviepage')\r\n        // console.log(cartimage)\r\n    }\r\n    rendermovie = (data) => {\r\n        if (data) {\r\n            return (\r\n                data.map(item => (< img src={item.imageurl} id={item.id} onClick={this.dataselect} alt='netflix images' />)\r\n                )\r\n            )\r\n        }\r\n\r\n    }\r\n    render() {\r\n        if (sessionStorage.getItem('logintoken') === null) {\r\n            this.props.history.push('/signin')\r\n        }\r\n        return (\r\n            <div className='Series_container'>\r\n                <div className='Series_searchbar'>\r\n                    <input placeholder='Search Documantaries here' onChange={this.inputhandler} />\r\n                </div>\r\n                <div className='Seriessearch_results'>\r\n                    {this.rendermovie(this.state.filteredseries)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        axios.get(url).then(res => {\r\n            this.setState({ movies: res.data })\r\n            if (this.state.movies) {\r\n                const output = this.state.movies.filter(item => item.genere === 'Documentaries')\r\n                console.log('output', output)\r\n                this.setState({ series: output, filteredseries: output })\r\n            }\r\n        })\r\n        window.scrollTo(\r\n            {\r\n                top: 0\r\n            }\r\n        )\r\n    }\r\n}\r\nexport default Documantaries","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\logincomponents\\Register.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Practice.js",["143"],"import { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './Practice.css'\r\nclass Practice extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state =\r\n        {\r\n            visible: false\r\n        }\r\n    }\r\n    visiblehandler = () => {\r\n        this.setState({ visible: !this.state.visible })\r\n    }\r\n    // styles=()=>\r\n    // {\r\n    //     visibility: this.state.visible ,\r\n\r\n    // }\r\n    visiblehandl = () => {\r\n        alert('click')\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='practice_container'>\r\n                <div className='text'>\r\n                    <button onClick={this.visiblehandler}>text</button>\r\n                </div>\r\n                {\r\n                    this.state.visible && <div className='list' class=\"w3-container w3-center w3-animate-top\" style={{ visibility: this.state.visible }}>\r\n                        <li onClick={this.visiblehandl}>a</li>\r\n\r\n                        <li>b</li>\r\n                        <li>c</li>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Practice","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\Netflixprofile.js\\Watchlist.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\users\\Userprofile.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\moviepage\\Moviepage.js",["144"],"import './Moviepage.css'\r\nimport axios from 'axios'\r\nimport { Component } from 'react'\r\nconst carturl = 'http://localhost:1234/cart'\r\nconst url = 'http://localhost:1234/movies'\r\n\r\nclass Moviepage extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            movies: ''\r\n        }\r\n    }\r\n    idhandler = (e) => {\r\n        const value = e.target.id\r\n        console.log(value)\r\n        const cartimage = this.state.movies.filter(item =>\r\n        (\r\n            parseInt(item.id) === parseInt(value)\r\n        ))\r\n        console.log(cartimage)\r\n        axios.post(carturl, cartimage)\r\n        this.props.history.push('/profile')\r\n    }\r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <div className='moviepage_container' >\r\n                <div className='movie_name'>\r\n                    <h1>{sessionStorage.getItem('movie_name')}</h1>\r\n                    <button onClick={this.idhandler} id={sessionStorage.getItem('movie_id')} className=\"register_button\">Add to list</button>\r\n                </div>\r\n                <div className='movie_image'>\r\n                    <img src={sessionStorage.getItem('movie_image')} alt='movie image' />\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            name: sessionStorage.getItem('profile_name'),\r\n            image: sessionStorage.getItem('profile_image')\r\n        })\r\n        axios.get(url).then(res => { this.setState({ movies: res.data }) })\r\n    }\r\n}\r\nexport default Moviepage","C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\redux\\store\\Store.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\redux\\reducer\\Reducer.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\redux\\display.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\redux\\actions\\index.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\redux\\reducer\\watchingcard.js",[],"C:\\Users\\benjimen richards\\Desktop\\Github new\\frontend-project-alfred-richards-au9\\netflix\\src\\redux\\reducer\\watchlist_reducer.js",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":22,"column":1,"nodeType":"151","messageId":"152","endLine":23,"endColumn":120},{"ruleId":"153","severity":1,"message":"154","line":4,"column":10,"nodeType":"155","messageId":"156","endLine":4,"endColumn":14},{"ruleId":"153","severity":1,"message":"157","line":6,"column":7,"nodeType":"155","messageId":"156","endLine":6,"endColumn":14},{"ruleId":"153","severity":1,"message":"158","line":27,"column":15,"nodeType":"155","messageId":"156","endLine":27,"endColumn":20},{"ruleId":"153","severity":1,"message":"159","line":3,"column":10,"nodeType":"155","messageId":"156","endLine":3,"endColumn":24},{"ruleId":"153","severity":1,"message":"154","line":4,"column":10,"nodeType":"155","messageId":"156","endLine":4,"endColumn":14},{"ruleId":"153","severity":1,"message":"154","line":3,"column":10,"nodeType":"155","messageId":"156","endLine":3,"endColumn":14},{"ruleId":"153","severity":1,"message":"154","line":2,"column":10,"nodeType":"155","messageId":"156","endLine":2,"endColumn":14},{"ruleId":"160","severity":1,"message":"161","line":34,"column":21,"nodeType":"162","endLine":34,"endColumn":90},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'carturl' is assigned a value but never used.","'value' is assigned a value but never used.","'BsSkipBackward' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]